{"version":3,"sources":["components/feedback/feedbackStats/FeedbackStats.js","components/feedback/feedbackForm/FeedbackForm.js","components/feedback/notification/Notification.js","components/feedback/section/Section.js","components/App.js","index.js"],"names":["FeedbackStats","data","total","percentages","good","neutral","bad","FeedbackForm","func","value","onClick","Notification","message","Section","title","children","App","state","e","val","target","setState","getTotal","getPercentages","Math","round","stats","this","Component","ReactDOM","render","document","getElementById"],"mappings":"4LA2BeA,EAzBO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAClC,OACI,oCACE,0CACA,4BACE,qCACQ,8BAAOF,EAAKG,OAEpB,wCACW,8BAAOH,EAAKI,UAEvB,oCACO,8BAAOJ,EAAKK,MAEnB,sCACS,8BAAOJ,IAEhB,kDACqB,8BAAOC,EAAP,SCPlBI,EAXM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OACA,oCACI,4BAAQC,MAAM,OAAOC,QAAWF,GAAhC,QACA,4BAAQC,MAAM,UAAUC,QAAWF,GAAnC,WACA,4BAAQC,MAAM,MAAMC,QAAWF,GAA/B,SCDGG,EAJM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACrB,2BAAIA,ICQWC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,4BAAKD,GACJC,ICsCQC,E,2MApCXC,MAAQ,CACJb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAETE,KAAO,SAACU,GACA,IAAMC,EAAMD,EAAEE,OAAOX,MACrB,EAAKY,SAAL,eACGF,EAAM,EAAKF,MAAME,GAAO,K,EAInCG,SAAW,WAAO,IAAD,EACkB,EAAKL,MACpC,OAFa,EACLb,KADK,EACCC,QADD,EACUC,K,EAI3BiB,eAAiB,WACb,OAAOC,KAAKC,MAAO,EAAKR,MAAMb,KAAO,EAAKkB,WAAc,M,wEAIxD,OACI,oCACA,kBAAC,EAAD,CAASR,MAAM,yBACX,kBAAC,EAAD,CAAcY,MAAOC,KAAKV,MAAOT,KAAMmB,KAAKnB,QAEvB,IAApBmB,KAAKL,WAAqB,kBAAC,EAAD,CAAerB,KAAM0B,KAAKV,MAAOf,MAAOyB,KAAKL,WAC5EnB,YAAawB,KAAKJ,mBACb,kBAAC,EAAD,CAAcX,QAAQ,2B,GA9BrBgB,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.79166f5f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst FeedbackStats = ({ data, total, percentages }) => {\n    return (\n        <>\n          <h2>Statistics</h2>\n          <ul>\n            <li>\n              Good: <span>{data.good}</span>\n            </li>\n            <li>\n              Neutral: <span>{data.neutral}</span>\n            </li>\n            <li>\n              Bad: <span>{data.bad}</span>\n            </li>\n            <li>\n              Total: <span>{total}</span>\n            </li>\n            <li>\n              Positive feedback: <span>{percentages}%</span>\n            </li>\n          </ul>\n        </>\n      );\n    };\n\nexport default FeedbackStats;","import React from 'react';\n\nconst FeedbackForm = ({ func }) => {\n        return ( \n        <>\n            <button value=\"good\" onClick = {func}>Good</button> \n            <button value=\"neutral\" onClick = {func}>Neutral</button> \n            <button value=\"bad\" onClick = {func}>Bad</button> \n        </>\n        );\n    }\n\n\nexport default FeedbackForm;","import React from 'react'\n\nconst Notification = ({message}) => (\n<p>{message}</p>\n);\n\nexport default Notification;","import React from \"react\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nexport default Section;","import React, { Component } from 'react';\nimport FeedbackStats from './feedback/feedbackStats/FeedbackStats'\nimport FeedbackForm from './feedback/feedbackForm/FeedbackForm'\nimport Notification from './feedback/notification/Notification'\nimport Section from './feedback/section/Section'\n\n\nclass App extends Component {\n    state = { \n        good: 0,\n        neutral: 0,\n        bad: 0\n     }\n    func = (e) => {\n            const val = e.target.value;\n            this.setState({\n              [val]: this.state[val] + 1\n            });\n          };\n    \n    getTotal = () => {\n        const { good, neutral, bad } = this.state;\n        return good + neutral + bad;\n      };\n        \n    getPercentages = () => {\n        return Math.round((this.state.good / this.getTotal()) * 100);\n    };\n\n    render() {\n        return (\n            <>\n            <Section title=\"Please leave feedback\">\n                <FeedbackForm stats={this.state} func={this.func} />\n            </Section>\n                {this.getTotal() !== 0  ? (<FeedbackStats data={this.state} total={this.getTotal()}\n            percentages={this.getPercentages()}/>) : \n                (<Notification message=\"No feedback given\" />)\n                }\n            </>\n        );\n    }\n}\n\nexport default App;\n\n// good = (e) => {\n    //     this.setState(prevState => {\n    //         return {\n    //             good: prevState.good + 1\n    //         };\n    // })}\n    // neutral = (e) => {\n    //     this.setState(prevState => {\n    //         return {\n    //             neutral: prevState.neutral + 1\n    //         };\n    // })}\n    // bad = (e) => {\n    //     this.setState(prevState => {\n    //         return {\n    //             bad: prevState.bad + 1\n    //         };\n    // })}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}